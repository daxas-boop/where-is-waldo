{"version":3,"sources":["config/fbConfig.ts","store/actions/loginActions.ts","components/navbar/SignedInLinks.tsx","components/navbar/SignedOutLinks.tsx","components/navbar/NavBar.tsx","components/leaderboard/Leaderboard.tsx","components/levels/Cards.tsx","components/home/helpers/time-helpers.ts","levels/Level.ts","assets/images/level_1.png","assets/images/level_2.png","assets/images/level_3.png","assets/images/level_4.png","levels/levels.ts","components/levels/Levels.tsx","store/actions/levelActions.ts","components/navbar/SignUp.tsx","components/home/NotSigned.tsx","components/home/helpers/helper-functions.ts","components/home/Game.tsx","components/home/Home.tsx","components/navbar/SignIn.tsx","components/loading/Loading.tsx","App.tsx","store/reducers/authReducer.ts","store/reducers/levelReducer.ts","store/reducers/index.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","useStyles","makeStyles","root","display","flexGrow","justifyContent","avatar","SignedInLinks","classes","dispatch","useDispatch","initialName","useSelector","state","auth","user","username","toUpperCase","className","Avatar","Button","onClick","signOut","then","type","catch","error","payload","SignedOutLinks","style","textDecoration","to","theme","createStyles","height","padding","menuButton","marginRight","spacing","title","textAlign","links","margin","NavBar","authState","AppBar","position","Toolbar","Typography","variant","gridTemplateColumns","gridTemplateRows","text","marginTop","color","tableContainer","width","backgroundColor","fontSize","table","hideLastBorder","border","button","Leaderboard","useState","leaderboards","setLeaderboards","leaderboardSelected","setLeaderboardSelected","loading","setLoading","useEffect","a","collection","get","leaderboardsPromise","docs","map","lead","id","data","myComparator","b","time","localeCompare","forEach","leaderboard","top_10","sort","fetchLeaderboards","Container","align","CircularProgress","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","index","userName","scope","maxWidth","media","Cards","props","level","Card","CardActionArea","CardMedia","image","name","CardContent","gutterBottom","startedTime","endedTime","Level","characters","this","levels","level_1","level1_img","level_2","level2_img","level_3","level3_img","level_4","level4_img","container","marginBottom","grid","Levels","history","useHistory","Grid","Object","keys","key","selectLevel","push","item","flexDirection","alignItems","fontFamily","SignUp","email","setEmail","password","setPassword","setUsername","submitForm","e","preventDefault","doc","Error","createUserWithEmailAndPassword","currentUser","set","uid","signUp","onSubmit","autoComplete","Input","placeholder","onChange","target","value","required","authError","message","marginLeft","NotSigned","isCharacterFound","character","selectedCoords","docLevel","selectedCoordX","selectedCoordY","isFound","levelData","exists","characterCoords","coords_x","coords_y","console","log","saveTimeInLeaderboard","userUid","docRef","levelRef","topTenPromise","topTen","orderedTopTen","isTopTen","length","update","FieldValue","arrayRemove","arrayUnion","timeStamp","Date","userTime","getTimeDifferential","difference","secondDiff","Math","abs","seconds","floor","minutes","pad","toString","listButton","pointerEvents","box","textItems","ImageContainer","styled","div","Circle","spin","keyframes","LoadingCircle","coords","Wrapper","FoundCircle","ButtonContainer","FinishedLevelContainer","StyledLink","Link","ButtonList","Game","selectorBoxCoords","setSelectorBoxCoords","showSelectorBox","setShowSelectorBox","isLevelOver","setIsLevelOver","charactersFound","setCharactersFound","charactersNotFound","setCharactersNotFound","Timestamp","now","toMillis","handleCharacterClick","coordinates","newNotFoundCharacters","filter","char","Box","slice","src","nativeEvent","offsetX","offsetY","handleImageClick","alt","Home","levelState","SignIn","signInWithEmailAndPassword","signIn","App","isMounted","onAuthStateChanged","userRef","userData","basename","path","exact","initState","authReducer","action","levelReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6eccaa0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAY76zZT3VJZdf-0wyCnVJP6C_UAycfDmY',\n  authDomain: 'where-s-waldo-51820.firebaseapp.com',\n  databaseURL: 'https://where-s-waldo-51820.firebaseio.com',\n  projectId: 'where-s-waldo-51820',\n  storageBucket: 'where-s-waldo-51820.appspot.com',\n  messagingSenderId: '1023701944897',\n  appId: '1:1023701944897:web:c8e527f6635d67993cd4c0',\n  measurementId: 'G-QZ1C22GTHL',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import firebase from '../../config/fbConfig';\nimport 'firebase/firestore';\nimport { Dispatch } from 'redux';\nconst db = firebase.firestore();\n\nexport const signIn = (email: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    } catch (error) {\n      dispatch({ type: 'LOGIN_ERROR', payload: error });\n    }\n  };\n};\n\nexport const signUp = (email: string, password: string, username: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const querySnapshot = await db.collection('usernames').get();\n      querySnapshot.forEach((doc) => {\n        if (doc.id === username) {\n          throw new Error('Username already taken.');\n        }\n      });\n      await firebase.auth().createUserWithEmailAndPassword(email, password);\n      const user = firebase.auth().currentUser;\n      db.collection('usernames').doc(username).set({ uid: user!.uid });\n      db.collection('users').doc(user!.uid).set({\n        username,\n        email,\n      });\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    } catch (error) {\n      dispatch({ type: 'SIGNUP_ERROR', payload: error });\n    }\n  };\n};\n\nexport const logout = () => {\n  return (dispatch: Dispatch) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'LOGOUT_SUCCESS' });\n      })\n      .catch((error) => {\n        dispatch({ type: 'LOGOUT_ERROR', payload: error });\n      });\n  };\n};\n","import React from 'react';\nimport { RootState, AuthState } from '../../types/state-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../store/actions/loginActions';\nimport { Button, Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    // eslint-disable-next-line no-useless-computed-key\n    ['@media (max-width:768px)']: { flexGrow: 1, justifyContent: 'flex-end' },\n  },\n  avatar: {\n    // eslint-disable-next-line no-useless-computed-key\n    ['@media (max-width:468px)']: { display: 'none' },\n  },\n});\n\nconst SignedInLinks = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(logout());\n  };\n\n  const authState: AuthState = useSelector((state: RootState) => state.auth);\n  const initialName = authState.user!.username[0].toUpperCase();\n\n  return (\n    <div className={classes.root}>\n      <Avatar className={classes.avatar}>{initialName}</Avatar>\n      <Button onClick={handleClick}>Logout</Button>\n    </div>\n  );\n};\n\nexport default SignedInLinks;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    // eslint-disable-next-line no-useless-computed-key\n    ['@media (max-width:768px)']: { flexGrow: 1, justifyContent: 'flex-end' },\n  },\n});\n\nconst SignedOutLinks = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Link style={{ textDecoration: 'none' }} to=\"/signup\">\n        <Button>Sign up</Button>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to=\"/signin\">\n        <Button>Sign in</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { Link } from 'react-router-dom';\nimport { RootState } from '../../types/state-types';\nimport { useSelector } from 'react-redux';\nimport { Button, Typography, Toolbar, AppBar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      height: '10vh',\n      // eslint-disable-next-line no-useless-computed-key\n      ['@media (max-width:468px)']: { padding: 0 },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      textAlign: 'center',\n      ['@media (max-width:768px)']: { display: 'none' }, // eslint-disable-line no-useless-computed-key\n    },\n    links: {\n      margin: 5,\n      textDecoration: 'none',\n    },\n  })\n);\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const authState = useSelector((state: RootState) => state.auth);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.root}>\n        <Link className={classes.links} to=\"/\">\n          <HomeIcon />\n        </Link>\n        <Link className={classes.links} to=\"/levels\">\n          <Button>Levels</Button>\n        </Link>\n        <Link className={classes.links} to=\"/leaderboard\">\n          <Button>Leaderboard</Button>\n        </Link>\n        <Typography variant=\"h3\" className={classes.title}>\n          Where's Waldo\n        </Typography>\n        {authState.user ? <SignedInLinks /> : <SignedOutLinks />}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../types/state-types';\nimport firebase from '../../config/fbConfig';\nimport 'firebase/firestore';\nimport {\n  Container,\n  CircularProgress,\n  Paper,\n  TableRow,\n  TableHead,\n  TableContainer,\n  TableCell,\n  TableBody,\n  Table,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 3fr',\n    // eslint-disable-next-line no-useless-computed-key\n    ['@media (max-width:468px)']: {\n      gridTemplateColumns: '1fr',\n      gridTemplateRows: '1fr 4fr',\n    },\n  },\n  text: {\n    marginTop: '20px',\n    color: 'white',\n  },\n  tableContainer: {\n    width: '70%',\n    margin: '0px auto',\n    backgroundColor: '#424242',\n    color: '#424242',\n    fontSize: '20px',\n    '@media (max-width:468px)': {\n      width: '90%',\n    },\n  },\n  table: {\n    width: '100%',\n    fontSize: '20px',\n    backgroundColor: '#424242',\n  },\n  hideLastBorder: {\n    '&:last-child td, &:last-child th': {\n      border: 0,\n    },\n  },\n  button: {\n    width: '100%',\n  },\n});\n\nconst Leaderboard = () => {\n  const classes = useStyles();\n  const authState = useSelector((state: RootState) => state.auth);\n  const [leaderboards, setLeaderboards] = useState<any>();\n  const [leaderboardSelected, setLeaderboardSelected] = useState<any>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (authState.user) {\n      const db = firebase.firestore();\n      const fetchLeaderboards = async () => {\n        const leaderboardsPromise = await db.collection('leaderboards').get();\n        const leaderboards = leaderboardsPromise.docs.map(function (lead) {\n          return {\n            id: lead.id,\n            data: lead.data(),\n          };\n        });\n        const myComparator = (a: any, b: any) => a.time.localeCompare(b.time);\n        leaderboards.forEach((leaderboard: any) => {\n          leaderboard.data.top_10.sort(myComparator);\n        });\n        setLeaderboards(leaderboards);\n        setLoading(false);\n      };\n      fetchLeaderboards();\n    }\n  }, [authState]);\n\n  if (!authState.user)\n    return (\n      <Typography className={classes.text} variant=\"h2\" align=\"center\">\n        Must be logged in to see this page.\n      </Typography>\n    );\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        <div>\n          <Typography className={classes.text} variant=\"h3\" align=\"center\">\n            Levels\n          </Typography>\n          {loading && (\n            <div style={{ display: 'flex' }}>\n              <CircularProgress style={{ margin: '0 auto' }} />\n            </div>\n          )}\n          {leaderboards &&\n            leaderboards.map((leaderboard: any) => (\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                key={leaderboard.id}\n                className={classes.button}\n                onClick={() => {\n                  setLeaderboardSelected(leaderboard);\n                }}\n              >\n                {leaderboard.id}\n              </Button>\n            ))}\n        </div>\n      </Container>\n\n      <Container>\n        <Typography className={classes.text} variant=\"h3\" align=\"center\">\n          Top 10\n        </Typography>\n\n        {leaderboardSelected ? (\n          <TableContainer className={classes.tableContainer} component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">User</TableCell>\n                  <TableCell align=\"center\">Time</TableCell>\n                  <TableCell align=\"center\">Position</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {leaderboardSelected.data.top_10.map(\n                  (row: any, index: number) => (\n                    <TableRow key={index} className={classes.hideLastBorder}>\n                      <TableCell align=\"center\">{row.userName}</TableCell>\n                      <TableCell align=\"center\">{row.time}</TableCell>\n                      <TableCell component=\"th\" align=\"center\" scope=\"row\">\n                        {index + 1}\n                      </TableCell>\n                    </TableRow>\n                  )\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        ) : (\n          <Typography className={classes.text} variant=\"h6\" align=\"center\">\n            Please select a level\n          </Typography>\n        )}\n      </Container>\n    </div>\n  );\n};\nexport default Leaderboard;\n","import React from 'react';\nimport { ILevels } from '../../types/level-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  CardMedia,\n  CardContent,\n  CardActionArea,\n  Card,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 450,\n    // eslint-disable-next-line no-useless-computed-key\n    ['@media (max-width:468px)']: { maxWidth: 300 },\n  },\n  media: {\n    height: 300,\n    width: '100%',\n  },\n});\n\nexport default function Cards(props: { level: ILevels }) {\n  const { level } = props;\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={level.image}\n          title={level.name}\n        />\n        <CardContent>\n          <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h2\">\n            {level.name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import firebase from '../../../config/fbConfig';\nimport 'firebase/firestore';\n\nlet startedTime: number | undefined;\nlet endedTime: number | undefined;\n\nexport const startTimer = () => {\n  console.log('timer started');\n  startedTime = firebase.firestore.Timestamp.now().toMillis();\n};\n\nexport const endTimer = () => {\n  console.log('timer ended');\n  endedTime = firebase.firestore.Timestamp.now().toMillis();\n};\n\nexport const getTimeDifferential = () => {\n  const difference = endedTime! - startedTime!;\n  const secondDiff = Math.abs(difference / 1000);\n  const seconds = Math.floor(secondDiff % 60);\n  const minutes = Math.floor(secondDiff / 60) % 24;\n  return `${pad(minutes)}:${pad(seconds)}`;\n};\n\nconst pad = (value: number) => {\n  if (value < 10) {\n    return ('0' + value).toString();\n  } else {\n    return value;\n  }\n};\n","export default class Level {\n  image: string;\n  name: string;\n  characters: string[];\n  constructor(characters: Array<string>, image: string, name: string) {\n    this.name = name;\n    this.image = image;\n    this.characters = characters;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/level_1.8d142447.png\";","export default __webpack_public_path__ + \"static/media/level_2.39e6469c.png\";","export default __webpack_public_path__ + \"static/media/level_3.df92acac.png\";","export default __webpack_public_path__ + \"static/media/level_4.cbda96b1.png\";","import { ILevels } from '../types/level-types';\nimport Level from './Level';\nimport level1_img from '../assets/images/level_1.png';\nimport level2_img from '../assets/images/level_2.png';\nimport level3_img from '../assets/images/level_3.png';\nimport level4_img from '../assets/images/level_4.png';\n\nconst level_1 = new Level(\n  ['waldo', 'odlaw', 'wenda', 'whitebeard'],\n  level1_img,\n  'Level 1'\n);\n\nconst level_2 = new Level(\n  ['lisa', 'homer', 'marge', 'bart'],\n  level2_img,\n  'Level 2'\n);\n\nconst level_3 = new Level(['waldo'], level3_img, 'Level 3');\n\nconst level_4 = new Level(\n  ['waldo', 'odlaw', 'wenda', 'whitebeard'],\n  level4_img,\n  'Level 4'\n);\n\nexport const levels: { [key: string]: ILevels } = {\n  level_1,\n  level_2,\n  level_3,\n  level_4,\n};\n","import React from 'react';\nimport Cards from './Cards';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../types/state-types';\nimport { levels } from '../../levels/levels';\nimport { selectLevel } from '../../store/actions/levelActions';\nimport { ILevels } from '../../types/level-types';\nimport { useHistory } from 'react-router';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Container, Typography, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: '30px auto',\n    },\n    text: {\n      marginTop: '20px',\n      marginBottom: '20px',\n      color: 'white',\n    },\n    grid: {\n      justifyContent: 'center',\n    },\n  })\n);\n\nconst Levels = () => {\n  const classes = useStyles();\n  const authState = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLevelClick = (level: ILevels) => {\n    dispatch(selectLevel(level));\n    history.push('/');\n  };\n\n  if (!authState.user)\n    return (\n      <Typography className={classes.text} variant=\"h2\" align=\"center\">\n        Must be logged in to see this page.\n      </Typography>\n    );\n\n  return (\n    <Container className={classes.container}>\n      <Typography className={classes.text} variant=\"h2\" align=\"center\">\n        Select a level\n      </Typography>\n      <Grid className={classes.grid} container spacing={2}>\n        {Object.keys(levels).map((key) => {\n          return (\n            <Grid key={key} onClick={() => handleLevelClick(levels[key])} item>\n              <Cards level={levels[key]} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Levels;\n","import { ILevels } from '../../types/level-types';\nimport { Dispatch } from 'redux';\n\nexport const selectLevel = (level: ILevels) => {\n  return (dispatch: Dispatch) => {\n    dispatch({ type: 'LEVEL_SELECTED', payload: level });\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { signUp } from '../../store/actions/loginActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../types/state-types';\nimport { Redirect } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Input, Button, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: '10px',\n      fontFamily: 'Roboto',\n      color: 'white',\n      maxWidth: '100%',\n      '& > *': {\n        margin: theme.spacing(2),\n        width: '360px',\n        maxWidth: '100%',\n      },\n    },\n    button: {\n      alignItems: 'center',\n      width: '200px',\n    },\n    title: {\n      width: '80%',\n    },\n  })\n);\n\nconst SignUp = (props: any) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const dispatch = useDispatch();\n  const authState = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {\n    dispatch({ type: 'CLEANUP_LOGIN_ERROR' });\n  }, [dispatch]);\n\n  const submitForm = (e: React.FormEvent) => {\n    e.preventDefault();\n    dispatch(signUp(email, password, username));\n  };\n\n  if (authState.user) return <Redirect to=\"/\" />;\n\n  return (\n    <form\n      onSubmit={(e) => submitForm(e)}\n      className={classes.root}\n      autoComplete=\"off\"\n    >\n      <Typography className={classes.title} variant=\"h2\" align=\"center\">\n        Create your account\n      </Typography>\n\n      <Input\n        style={{ color: 'white' }}\n        id=\"username\"\n        placeholder=\"Username\"\n        onChange={(e) => setUsername(e.target.value)}\n        required\n      />\n      <Input\n        style={{ color: 'white' }}\n        id=\"email\"\n        placeholder=\"Email\"\n        type=\"email\"\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n      <Input\n        style={{ color: 'white' }}\n        id=\"password\"\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        required\n      />\n      <Button\n        className={classes.button}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Submit\n      </Button>\n      {authState.authError && (\n        <Typography color=\"error\" variant=\"h5\" align=\"center\">\n          {authState.authError.message}\n        </Typography>\n      )}\n    </form>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport SignUp from '../navbar/SignUp';\nimport { Link } from 'react-router-dom';\nimport { Typography, Container } from '@material-ui/core';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      fontFamily: 'Roboto',\n      color: 'white',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n    text: {\n      marginTop: '20px',\n    },\n  })\n);\n\nconst NotSigned = () => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <SignUp />\n      <Typography className={classes.text} align=\"center\" variant=\"h5\">\n        Already have an account? <Link to=\"/signin\">Sign In</Link>\n      </Typography>\n    </Container>\n  );\n};\n\nexport default NotSigned;\n","import { ILevels } from '../../../types/level-types';\nimport firebase from '../../../config/fbConfig';\nimport 'firebase/firestore';\n\nexport const isCharacterFound = async (\n  character: string,\n  level: ILevels,\n  selectedCoords: Array<number>\n) => {\n  const db = firebase.firestore();\n  const docLevel = db.collection('levels').doc(level.name);\n  const selectedCoordX = selectedCoords[0];\n  const selectedCoordY = selectedCoords[1];\n  let isFound: boolean = false;\n\n  try {\n    const levelData = await docLevel.get();\n    if (levelData.exists) {\n      const characterCoords = levelData.data()!.characters[character];\n      isFound =\n        selectedCoordX >= characterCoords.coords_x[0] &&\n        selectedCoordX <= characterCoords.coords_x[1] &&\n        selectedCoordY >= characterCoords.coords_y[0] &&\n        selectedCoordY <= characterCoords.coords_y[1];\n    } else {\n      throw new Error('Document not found');\n    }\n  } catch (error) {\n    console.log('Something went wrong', error);\n  }\n\n  return isFound;\n};\n\ntype LeaderboardTimes = {\n  time: string;\n  userName: string;\n};\n\nexport const saveTimeInLeaderboard = async (time: string, level: ILevels) => {\n  const db = firebase.firestore();\n  const userUid = firebase.auth().currentUser!.uid;\n  const docRef = db.collection('users').doc(userUid);\n\n  const doc = await docRef.get();\n  try {\n    if (doc.exists) {\n      const userName = doc.data()!.username;\n      const levelRef = db.collection('leaderboards').doc(level.name);\n      const topTenPromise = await levelRef.get();\n      const topTen = topTenPromise.data()!.top_10;\n      const myComparator = (a: LeaderboardTimes, b: LeaderboardTimes) =>\n        a.time.localeCompare(b.time);\n      const orderedTopTen = topTen.sort(myComparator);\n      if (isTopTen(orderedTopTen, time)) {\n        if (orderedTopTen.length === 10) {\n          levelRef.update({\n            top_10: firebase.firestore.FieldValue.arrayRemove(\n              orderedTopTen[orderedTopTen.length - 1]\n            ),\n          });\n        }\n        levelRef.update({\n          top_10: firebase.firestore.FieldValue.arrayUnion({\n            userName,\n            time,\n            timeStamp: new Date(),\n          }),\n        });\n      }\n    } else {\n      throw new Error('No such document');\n    }\n  } catch (error) {\n    console.log('Error getting document:', error);\n  }\n};\n\nconst isTopTen = (topTen: Array<LeaderboardTimes>, userTime: string) => {\n  if (topTen.length < 10) return true;\n  return topTen[topTen.length - 1].time.localeCompare(userTime) === 1;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  isCharacterFound,\n  saveTimeInLeaderboard,\n} from './helpers/helper-functions';\nimport {\n  startTimer,\n  endTimer,\n  getTimeDifferential,\n} from './helpers/time-helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/core';\n\nconst useStyles = makeStyles({\n  title: {\n    color: 'white',\n    margin: '10px',\n  },\n  image: {\n    width: '1280px',\n    height: '720px',\n  },\n  listButton: {\n    pointerEvents: 'auto',\n    width: '150px',\n  },\n  box: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  textItems: {\n    margin: '0px 7px',\n    color: 'white',\n  },\n});\n\nconst ImageContainer = styled.div`\n  width: 1280px;\n  position: relative;\n  overflow-y: hidden;\n  overflow-x: auto;\n  max-width: 95%;\n  padding: 0;\n  margin: 22px auto;\n`;\n\nconst Circle = styled.div`\n  width: 50px;\n  height: 50px;\n  border: 2px dashed black;\n  border-radius: 50%;\n  position: absolute;\n  pointer-events: none;\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\ntype CoordsProps = {\n  coords: Array<number>;\n};\n\nconst LoadingCircle = styled.div<CoordsProps>`\n  position: absolute;\n  border: 10px solid #f3f3f3;\n  border-top: 10px solid #3498db;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: ${spin} 2s linear infinite;\n  left: ${(props) => (props.coords[0] - 25).toString() + 'px'};\n  top: ${(props) => (props.coords[1] - 25).toString() + 'px'};\n`;\n\nconst Wrapper = styled.div<CoordsProps>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  pointer-events: none;\n  left: ${(props) => (props.coords[0] - 25).toString() + 'px'};\n  top: ${(props) => (props.coords[1] - 25).toString() + 'px'};\n`;\n\nconst FoundCircle = styled.div<CoordsProps>`\n  position: absolute;\n  left: ${(props) => (props.coords[0] - 25).toString() + 'px'};\n  top: ${(props) => (props.coords[1] - 25).toString() + 'px'};\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 5px solid black;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  margin-top: 20px;\n`;\n\nconst FinishedLevelContainer = styled.div`\n  margin-top: 50px;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  margin-right: 20px;\n`;\n\nconst ButtonList = styled.div<CoordsProps>`\n  display: flex;\n  flex-direction: column;\n  margin-left: ${(props) => (props.coords[0] < 640 ? '60px' : '-160px')};\n  margin-top: ${(props) =>\n    props.coords[1] > 620 ? '-100px' : props.coords[1] < 20 ? '20px' : '0px'};\n`;\n\nconst Game = (props: any) => {\n  const { level } = props;\n  const [selectorBoxCoords, setSelectorBoxCoords] = useState<Array<number>>([]);\n  const [showSelectorBox, setShowSelectorBox] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isLevelOver, setIsLevelOver] = useState(false);\n  const [charactersFound, setCharactersFound] = useState<any>([]);\n  const [charactersNotFound, setCharactersNotFound] = useState<Array<string>>(\n    level.characters\n  );\n  const classes = useStyles(props);\n\n  useEffect(() => {\n    if (!isLevelOver) {\n      startTimer();\n    }\n  }, [isLevelOver]);\n\n  useEffect(() => {\n    if (charactersNotFound.length === 0) {\n      endTimer();\n      saveTimeInLeaderboard(getTimeDifferential(), level);\n    }\n    setIsLevelOver(charactersNotFound.length === 0);\n  }, [charactersNotFound, level]);\n\n  const restartLevel = () => {\n    setCharactersFound([]);\n    setCharactersNotFound(level.characters);\n  };\n\n  const handleImageClick = (e: React.MouseEvent<HTMLElement>) => {\n    const coords = [e.nativeEvent.offsetX, e.nativeEvent.offsetY];\n    console.log(coords);\n    setSelectorBoxCoords(coords);\n    setShowSelectorBox(true);\n  };\n\n  const handleCharacterClick = async (\n    character: string,\n    coordinates: Array<number>\n  ) => {\n    setLoading(true);\n    setShowSelectorBox(false);\n    const isFound = await isCharacterFound(character, level, coordinates);\n    setLoading(false);\n\n    if (isFound) {\n      const newNotFoundCharacters = charactersNotFound.filter(\n        (char: string) => char !== character\n      );\n      setCharactersNotFound(newNotFoundCharacters);\n      setCharactersFound([...charactersFound, { character, coordinates }]);\n    }\n  };\n\n  if (isLevelOver)\n    return (\n      <FinishedLevelContainer>\n        <Typography\n          className={classes.title}\n          gutterBottom\n          variant=\"h1\"\n          align=\"center\"\n        >\n          {`You beat ${level.name}`}\n        </Typography>\n        <Typography gutterBottom color=\"primary\" variant=\"h3\" align=\"center\">\n          Your time was {getTimeDifferential()}\n        </Typography>\n        <ButtonContainer>\n          <StyledLink to=\"/levels\">\n            <Button variant=\"contained\">Select a new Level</Button>\n          </StyledLink>\n          <Button onClick={() => restartLevel()} variant=\"contained\">\n            Play again?\n          </Button>\n        </ButtonContainer>\n      </FinishedLevelContainer>\n    );\n\n  return (\n    <>\n      <Typography className={classes.title} variant=\"h2\" align=\"center\">\n        {level.name}\n      </Typography>\n      <Typography className={classes.title} variant=\"h5\" align=\"center\">\n        Find the following characters in the shortest time possible:\n      </Typography>\n      <Box className={classes.box}>\n        {charactersNotFound.map((character) => (\n          <Typography\n            key={character}\n            className={classes.textItems}\n            variant=\"h6\"\n            align=\"center\"\n          >\n            {character[0].toUpperCase() + character.slice(1)}\n          </Typography>\n        ))}\n      </Box>\n      <ImageContainer>\n        <img\n          className={classes.image}\n          src={level.image}\n          onClick={(e) => handleImageClick(e)}\n          alt={`${level.name}`}\n        />\n\n        {charactersFound.map(\n          (character: { character: string; coordinates: Array<number> }) => (\n            <FoundCircle\n              key={character.character}\n              coords={character.coordinates}\n            ></FoundCircle>\n          )\n        )}\n\n        {showSelectorBox && (\n          <Wrapper coords={selectorBoxCoords}>\n            <Circle />\n            <ButtonList coords={selectorBoxCoords}>\n              {charactersNotFound.map((character: string) => (\n                <Button\n                  className={classes.listButton}\n                  key={character}\n                  variant=\"contained\"\n                  onClick={() =>\n                    handleCharacterClick(character, selectorBoxCoords)\n                  }\n                >\n                  {character}\n                </Button>\n              ))}\n            </ButtonList>\n          </Wrapper>\n        )}\n\n        {loading && <LoadingCircle coords={selectorBoxCoords} />}\n      </ImageContainer>\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState, LevelState, AuthState } from '../../types/state-types';\nimport NotSigned from './NotSigned';\nimport Game from './Game';\nimport Levels from '../levels/Levels';\n\nconst Home = () => {\n  const authState: AuthState = useSelector((state: RootState) => state.auth);\n  const levelState: LevelState = useSelector((state: RootState) => state.level);\n  if (!authState.user) {\n    return <NotSigned />;\n  } else {\n    return levelState.level ? <Game level={levelState.level} /> : <Levels />;\n  }\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { signIn } from '../../store/actions/loginActions';\nimport { RootState } from '../../types/state-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Input, Button, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: '10px',\n      fontFamily: 'Roboto',\n      color: 'white',\n      '& > *': {\n        margin: theme.spacing(2),\n        width: '360px',\n      },\n    },\n    button: {\n      width: '200px',\n    },\n  })\n);\n\nconst SignIn = () => {\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const authState = useSelector((state: RootState) => state.auth);\n\n  useEffect(() => {\n    dispatch({ type: 'CLEANUP_LOGIN_ERROR' });\n  }, [dispatch]);\n\n  const submitForm = (e: React.FormEvent<Element>) => {\n    e.preventDefault();\n    dispatch(signIn(email, password));\n  };\n\n  if (authState.user) return <Redirect to=\"/\" />;\n\n  return (\n    <form\n      onSubmit={(e: React.FormEvent<Element>) => submitForm(e)}\n      className={classes.root}\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h2\" align=\"center\">\n        Sign In\n      </Typography>\n      <Input\n        style={{ color: 'white' }}\n        id=\"email\"\n        placeholder=\"Email\"\n        type=\"email\"\n        onChange={(e) => setEmail(e.target.value)}\n        required\n      />\n      <Input\n        style={{ color: 'white' }}\n        id=\"password\"\n        placeholder=\"Password\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        required\n      />\n      <Button\n        className={classes.button}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Submit\n      </Button>\n      {authState.authError && (\n        <Typography color=\"error\" variant=\"h5\" align=\"center\">\n          {authState.authError.message}\n        </Typography>\n      )}\n    </form>\n  );\n};\n\nexport default SignIn;\n","import React from 'react';\nimport './loading.css';\n\nexport default function loading() {\n  return (\n    <div id=\"preloader\">\n      <div id=\"loader\"></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/navbar/NavBar';\nimport Leaderboard from './components/leaderboard/Leaderboard';\nimport Levels from './components/levels/Levels';\nimport Home from './components/home/Home';\nimport SignIn from './components/navbar/SignIn';\nimport SignUp from './components/navbar/SignUp';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport firebase from './config/fbConfig';\nimport { useDispatch } from 'react-redux';\nimport Loading from './components/loading/Loading';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (isMounted) {\n        if (user) {\n          const db = firebase.firestore();\n          const userRef = await db.collection('users').doc(user.uid).get();\n          const userData = userRef.data();\n          dispatch({ type: 'USER_UPDATED', payload: userData });\n        } else {\n          dispatch({ type: 'USER_UPDATED', payload: null });\n        }\n        setLoading(false);\n      }\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  if (loading) return <Loading />;\n\n  return (\n    <Router basename=\"/\">\n      <Header></Header>\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/levels\" component={Levels}></Route>\n        <Route path=\"/leaderboard\" component={Leaderboard}></Route>\n        <Route path=\"/signin\" component={SignIn}></Route>\n        <Route path=\"/signup\" component={SignUp}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { AuthState } from '../../types/state-types';\n\nlet initState: AuthState = {\n  user: null,\n  authError: null,\n};\n\nconst authReducer = (\n  state = initState,\n  action: { type: string; payload?: any }\n) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return { ...state, authError: null };\n\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      console.error(action.payload);\n      return { ...state, authError: action.payload };\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return { ...state, authError: null };\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      console.error(action.payload!.message);\n      return { ...state, authError: action.payload };\n\n    case 'LOGOUT_SUCCESS':\n      console.log('logout success');\n      return { ...state, user: null };\n\n    case 'LOGOUT_ERROR':\n      console.log('logout error');\n      console.error(action.payload);\n      return { ...state };\n\n    case 'USER_UPDATED':\n      console.log('user updated');\n      return { ...state, user: action.payload };\n\n    case 'CLEANUP_LOGIN_ERROR':\n      console.log('clean up login error');\n      return { ...state, authError: null };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default authReducer;\n","import { LevelState } from '../../types/state-types';\nimport { ILevels } from '../../types/level-types';\n\nconst initState: LevelState = {\n  level: null,\n};\n\nconst levelReducer = (\n  state = initState,\n  action: { type: string; payload?: ILevels }\n) => {\n  switch (action.type) {\n    case 'LEVEL_SELECTED':\n      console.log('level selected');\n      return { ...state, level: action.payload };\n    default:\n      return { ...state };\n  }\n};\n\nexport default levelReducer;\n","import authReducer from './authReducer';\nimport levelReducer from './levelReducer';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  auth: authReducer,\n  level: levelReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/index';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}